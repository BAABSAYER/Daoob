services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: daoob_postgres
    environment:
      POSTGRES_DB: daoob_production
      POSTGRES_USER: daoob_user
      POSTGRES_PASSWORD: daoob_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - daoob_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U daoob_user -d daoob_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DAOOB Application
  daoob_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: daoob_api
    environment:
      NODE_ENV: production
      PORT: 8080
      HOST: 0.0.0.0
      DOCKER_CONTAINER: true
      DATABASE_URL: postgresql://daoob_user:daoob_secure_password_2024@postgres:5432/daoob_production
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: daoob_user
      PGPASSWORD: daoob_secure_password_2024
      PGDATABASE: daoob_production
      SESSION_SECRET: your_super_secure_session_secret_min_32_characters_long_2024
    expose:
      - "8080"
    volumes:
      - app_uploads:/app/uploads
    networks:
      - daoob_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional but recommended for production)
  nginx:
    image: nginx:alpine
    container_name: daoob_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - daoob_network
    depends_on:
      - daoob_app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local

networks:
  daoob_network:
    driver: bridge