mstech@mstech-MINI-S:~/Daoob$ # Create a more direct debug script
cat > direct-debug-auth.js << 'EOF'
import pg from 'pg';
import * as dotenv from 'dotenv';
import { scrypt, timingSafeEqual } from 'crypto';
import { promisify } from 'util';

// Load environment variables
dotenv.config();

const { Pool } = pg;
const scryptAsync = promisify(scrypt);

async function comparePasswords(supplied, stored) {
  console.log('Comparing passwords:');
  console.log('- Supplied:', supplied);
  console.log('- Stored:', stored);
  
  try {
    const [hashed, salt] = stored.split('.');
    console.log('- Extracted salt:', salt);
    
    if (!salt) {
      console.error('No salt found in stored password');
      return false;
    }
    
    const hashedBuf = Buffer.from(hashed, 'hex');
    console.log('- Hashed buffer length:', hashedBuf.length);
    
    const suppliedBuf = await scryptAsync(supplied, salt, 64);
    console.log('- Supplied buffer length:', suppliedBuf.length);
    
    const result = timingSafeEqual(hashedBuf, suppliedBuf);
    console.log('- Match result:', result);
    
    return result;
  } catch (error) {
    console.error('Error comparing passwords:', error);
    return false;
  }
}

async function testAuth() {
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL
  });

  try {
    // Get the admin user
    const adminResult = await pool.query(
      "SELECT * FROM users WHERE username = 'admin'"
    );
    
node direct-debug-auth.jsL = 'postgres://mstech:daoob123@localhost:5432/daoob_local';);mBytes().toSt
Admin user found: {
  id: 1,
  username: 'admin',
  passwordFormat: 'Has salt separator',
  passwordLength: 161
}

Testing password "password":
Comparing passwords:
- Supplied: password
- Stored: b9d02eb70d16441121a330be141ea2ec9df354095e56bf51acc85cc400042d29e726ac3b31fa4719d8df1a70a997bd89c8962e4710045b7f3ddc8f414ac1d46c.492c33ae1692e4d3ea3ae82441af1547
- Extracted salt: 492c33ae1692e4d3ea3ae82441af1547
- Hashed buffer length: 64
- Supplied buffer length: 64
- Match result: true
Password "password" MATCHES

Testing password "admin":
Comparing passwords:
- Supplied: admin
- Stored: b9d02eb70d16441121a330be141ea2ec9df354095e56bf51acc85cc400042d29e726ac3b31fa4719d8df1a70a997bd89c8962e4710045b7f3ddc8f414ac1d46c.492c33ae1692e4d3ea3ae82441af1547
- Extracted salt: 492c33ae1692e4d3ea3ae82441af1547
- Hashed buffer length: 64
- Supplied buffer length: 64
- Match result: false
Password "admin" does NOT match

Testing password "admin123":
Comparing passwords:
- Supplied: admin123
- Stored: b9d02eb70d16441121a330be141ea2ec9df354095e56bf51acc85cc400042d29e726ac3b31fa4719d8df1a70a997bd89c8962e4710045b7f3ddc8f414ac1d46c.492c33ae1692e4d3ea3ae82441af1547
- Extracted salt: 492c33ae1692e4d3ea3ae82441af1547
- Hashed buffer length: 64
- Supplied buffer length: 64
- Match result: false
Password "admin123" does NOT match

Testing password "123456":
Comparing passwords:
- Supplied: 123456
- Stored: b9d02eb70d16441121a330be141ea2ec9df354095e56bf51acc85cc400042d29e726ac3b31fa4719d8df1a70a997bd89c8962e4710045b7f3ddc8f414ac1d46c.492c33ae1692e4d3ea3ae82441af1547
- Extracted salt: 492c33ae1692e4d3ea3ae82441af1547
- Hashed buffer length: 64
- Supplied buffer length: 64
- Match result: false
Password "123456" does NOT match

Resetting admin password to "password"
New password value: b5de8f19fd28c40f2bf10bb105cd2795a0badbf4cfd3a5a411c69b0eea9172b4a835f3ea8b1240c0269e86257f5d8d2c7d782e152ef15f63b828c97d27524e28.6f9b9af3cd6e8b8a73c2cdced37fe9f5
Password updated successfully
Comparing passwords:
- Supplied: password
- Stored: b5de8f19fd28c40f2bf10bb105cd2795a0badbf4cfd3a5a411c69b0eea9172b4a835f3ea8b1240c0269e86257f5d8d2c7d782e152ef15f63b828c97d27524e28.6f9b9af3cd6e8b8a73c2cdced37fe9f5
- Extracted salt: 6f9b9af3cd6e8b8a73c2cdced37fe9f5
- Hashed buffer length: 64
- Supplied buffer length: 64
- Match result: true

Verifying new password: SUCCESS
mstech@mstech-MINI-S:~/Daoob$ # Create a test login script
cat > test-api-login.js << 'EOF'
import fetch from 'node-fetch';

async function testLogin() {
  const apiUrl = 'http://localhost:5000/api/login';
  const credentials = {
    username: 'admin',
    password: 'password'
  };
  
  console.log(`Testing login with ${credentials.username}/${credentials.password}`);
  
  try {
    const response = await fetch(apiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(credentials)
    });
    
    console.log('Response status:', response.status);
    
    const contentType = response.headers.get('content-type');
    if (contentType && contentType.includes('application/json')) {
      const data = await response.json();
      console.log('Response data:', data);
    } else {
      const text = await response.text();
      console.log('Response text:', text);
    }
  } catch (error) {
    console.error('Error testing login:', error);
  }
}

testLogin();
EOF

# Install node-fetch if we haven't already
npm install node-fetch

# Run the test
node test-api-login.js

up to date, audited 488 packages in 4s

68 packages are looking for funding
  run `npm fund` for details

7 moderate severity vulnerabilities

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
Testing login with admin/password
Error testing login: FetchError: request to http://localhost:5000/api/login failed, reason: connect ECONNREFUSED 127.0.0.1:5000
    at ClientRequest.<anonymous> (file:///home/mstech/Daoob/node_modules/node-fetch/src/index.js:108:11)
    at ClientRequest.emit (node:events:536:35)
    at emitErrorEvent (node:_http_client:101:11)
    at Socket.socketErrorListener (node:_http_client:504:5)
    at Socket.emit (node:events:524:28)
    at emitErrorNT (node:internal/streams/destroy:169:8)
    at emitErrorCloseNT (node:internal/streams/destroy:128:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  type: 'system',
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  erroredSysCall: 'connect'
}
mstech@mstech-MINI-S:~/Daoob$ 